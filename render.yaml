services:
  # stacks-blockchain-api instance
  - name: mainnet2-stacks-blockchain-api
    type: web
    env: docker
    region: oregon # optional (defaults to oregon)
    plan: standard # optional (defaults to starter)
    branch: testing
    dockerfilePath: stacks-blockchain-api.Dockerfile
    dockerContext: .
    # dockerCommand: /start
    healthCheckPath: /status
    autoDeploy: false # optional
    envVars:
      - key: PG_HOST
        fromDatabase:
          name: mainnet2-postgres
          property: host
      - key: PG_PORT
        fromDatabase:
          name: mainnet2-postgres
          property: port
      - key: PG_DATABASE
        fromDatabase:
          name: mainnet2-postgres
          property: database
      - key: PG_USER
        fromDatabase:
          name: mainnet2-postgres
          property: user
      - key: PG_PASSWORD
        fromDatabase:
          name: mainnet2-postgres
          property: password
      - key: STACKS_CORE_EVENT_PORT
        value: 3700
      - key: STACKS_CORE_EVENT_HOST
        value: 0.0.0.0
      - key: STACKS_BLOCKCHAIN_API_PORT
        value: 3999
      - key: STACKS_BLOCKCHAIN_API_HOST
        value: 0.0.0.0
      - key: STACKS_BLOCKCHAIN_API_DB
        value: pg
      - key: STACKS_CORE_RPC_HOST
        fromService:
          name: mainnet2-stacks-blockchain
          type: pserv
          property: host
      - key: STACKS_CORE_RPC_PORT
        value: 20443
      - fromGroup: mainnet2-settings
    disk:
      name: mainnet2-api-vent-replay
      mountPath: /root/stacks-blockchain/data
      sizeGB: 10

  - name: mainnet2-stacks-blockchain
    type: web
    env: docker
    region: oregon # optional (defaults to oregon)
    plan: standard # optional (defaults to starter)
    branch: testing
    dockerfilePath: stacks-blockchain.Dockerfile
    dockerContext: .
    # dockerCommand: /start
    healthCheckPath: /status
    autoDeploy: false # optional
    envVars:
      - fromGroup: mainnet2-settings
    disk:
      name: mainnet2-stacks-blockchain
      mountPath: /root/stacks-blockchain/data
      sizeGB: 50 

  # # Private Postgres instance
  # - name: mainnet2-postgres
  #   type: pserv
  #   env: docker
  #   region: oregon # optional (defaults to oregon)
  #   plan: standard # optional (defaults to starter)
  #   branch: mainnet2-render
  #   dockerfilePath: postgres.Dockerfile
  #   envVars:
  #     - key: POSTGRES_PASSWORD
  #       generateValue: true # will generate a base64-encoded 256-bit secret
  #   # for mainnet2, keep the data ephemeral
  #   disk:
  #     name: postgres-data
  #     mountPath: /var/lib/postgresql/data
  #     sizeGB: 10 # optional

# # Managed postgres instance
databases:
  - name: mainnet2-postgres
    plan: standard # optional (defaults to starter)
    databaseName: mainnet # optional (Render may add a suffix)
    user: mainnet # optional
    # ipAllowList: []

envVarGroups:
  - name: mainnet2-settings
    envVars:
      - key: NODE_ENV
        value: production
      - key: GIT_TAG
        value: master
      - key: STACKS_CHAIN_ID
        value: 0x00000001
      - key: V2_POX_MIN_AMOUNT_USTX
        value: 90000000260
      - key: STACKS_NETWORK
        value: mainnet
      - key: STACKS_EXPORT_EVENTS_FILE
        value: /root/stacks-blockchain/stacks-node-events.tsv
      # - key: BNS_IMPORT_DIR
      #   value: /bns-data

 
